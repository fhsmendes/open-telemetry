// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ViaCEPClient is an autogenerated mock type for the ViaCEPClient type
type ViaCEPClient struct {
	mock.Mock
}

// GetCityFromCEP provides a mock function with given fields: cep
func (_m *ViaCEPClient) GetCityFromCEP(cep string) (string, error) {
	ret := _m.Called(cep)

	if len(ret) == 0 {
		panic("no return value specified for GetCityFromCEP")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(cep)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(cep)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(cep)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewViaCEPClient creates a new instance of ViaCEPClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewViaCEPClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *ViaCEPClient {
	mock := &ViaCEPClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
