version: '3.8'

services:
    jaeger-all-in-one:
        image: jaegertracing/all-in-one:latest
        container_name: jaeger
        ports:
            - "16686:16686"
            - "14250:14250"
        restart: always
        environment:
            - COLLECTOR_OTLP_ENABLED=true

    otel-collector:
        image: otel/opentelemetry-collector-contrib:latest
        container_name: otel-collector
        command: ["--config=/etc/otel-collector-config.yml"]
        volumes:
            - ./otel-collector-config.yml:/etc/otel-collector-config.yml
        ports:
            - "4317:4317"   # OTLP gRPC receiver
            - "4318:4318"   # OTLP HTTP receiver
            - "8889:8889"   # Prometheus metrics
        depends_on:
            - jaeger-all-in-one

    service-input:
        build:
            context: ./service-input
            dockerfile: Dockerfile
            args:
                - DOCKER_BUILDKIT=0
        container_name: service-a
        ports:
            - "8080:8080"
        environment:
            - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
            - OTEL_SERVICE_NAME=service-input
            - SERVICE_B_URL=http://service-orchestration:8081 
            - DOCKER_BUILDKIT=0
            - PORT=8080
        depends_on:
            otel-collector:
                condition: service_started
        restart: unless-stopped

    service-orchestration:
        build:
            context: ./service-orchestration
            dockerfile: Dockerfile
            args:
                - DOCKER_BUILDKIT=0
        container_name: service-b
        ports:
            - "8081:8081"
        environment:
            - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
            - OTEL_SERVICE_NAME=service-orchestration
            - APIKeyWeather=2091343afd4c4900823232247250408
            - DOCKER_BUILDKIT=0
            - PORT=8081
        depends_on:
            otel-collector:
                condition: service_started
            service-input:
                condition: service_started
        restart: unless-stopped 

    zipkin:
        image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
        container_name: zipkin
        # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
        environment:
            - STORAGE_TYPE=mem
            # Uncomment to enable self-tracing
            # - SELF_TRACING_ENABLED=true
            # Uncomment to increase heap size
            # - JAVA_OPTS=-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
        ports:
            # Port used for the Zipkin UI and HTTP Api
            - 9411:9411